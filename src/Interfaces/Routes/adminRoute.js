"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const adminController_1 = require("../controllers/adminController");
const userController_1 = require("../controllers/userController");
const adminAuth_1 = require("../Middlewares/adminAuth");
const employerController_1 = require("../controllers/employerController");
const subscription_Controller_1 = require("../controllers/subscription.Controller");
const questionController_1 = require("../controllers/questionController");
const router = (0, express_1.Router)();
router.post('/login', adminController_1.adminLogin);
router.get('/non-premium-users', adminAuth_1.adminAuth, userController_1.getNonPremiumUsers);
router.get('/premium-users', adminAuth_1.adminAuth, userController_1.getPremiumUsers);
router.get('/employerlist', adminAuth_1.adminAuth, userController_1.getAllEmployers);
router.post('/verify-emp', adminAuth_1.adminAuth, employerController_1.updateEmpStatus);
router.post('/logout', adminController_1.adminLogout);
router.get('/getadmindashboard', adminAuth_1.adminAuth, adminController_1.adminDashboardData);
router.get('/subscriptionhistory/:page', adminAuth_1.adminAuth, subscription_Controller_1.subscriptionHistoryForadmin);
router.get('/getallquestions/:page', adminAuth_1.adminAuth, questionController_1.allQuestions);
router.post('/add-question', adminAuth_1.adminAuth, questionController_1.addQuestionCntrl);
router.post('/enable-question', adminAuth_1.adminAuth, questionController_1.quesEnableCntrl);
router.post('/disable-question', adminAuth_1.adminAuth, questionController_1.quesDisbleCntrl);
router.put('/questionedit', adminAuth_1.adminAuth, questionController_1.QuestionEditCntrl);
router.get('/question/:id', adminAuth_1.adminAuth, questionController_1.getQuesrionByQId);
exports.default = router;
